version: '3.7'

networks:
  SpeedFunnelsNet:
    external: true
    name: SpeedFunnelsNet

services:
  # Serviço de inicialização do banco de dados
  db-init:
    image: postgres:14
    networks:
      - SpeedFunnelsNet
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./migrations.sql:/migrations.sql
    command: >
      bash -c "
        echo 'Iniciando migração do banco de dados...' &&
        until pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}; do
          echo 'Aguardando PostgreSQL ficar disponível...' && 
          sleep 2
        done &&
        echo 'PostgreSQL disponível, executando script de migração...' &&
        psql -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /migrations.sql &&
        echo 'Migração concluída com sucesso!'
      "
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    image: marcussviniciusa/meta-ads-backend:latest
    depends_on:
      - db-init
    restart: always
    environment:
      NODE_ENV: production
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 86400
      CORS_ORIGIN: ${CORS_ALLOWED_ORIGINS}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      FRONTEND_URL: https://${FRONTEND_DOMAIN}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      META_APP_ID: ${META_APP_ID}
      META_APP_SECRET: ${META_APP_SECRET}
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD}
      MIGRATION_SECRET_KEY: ${MIGRATION_SECRET_KEY}
    networks:
      - SpeedFunnelsNet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=SpeedFunnelsNet"
        - "traefik.http.routers.api-speedfunnels.rule=Host(`${API_DOMAIN}`)"
        - "traefik.http.routers.api-speedfunnels.entrypoints=websecure"
        - "traefik.http.routers.api-speedfunnels.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.api-speedfunnels.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolallowheaders=Origin,X-Requested-With,Content-Type,Accept,Authorization,X-Migration-Key"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolalloworiginlist=${CORS_ALLOWED_ORIGINS}"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolmaxage=86400"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.addvaryheader=true"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolallowcredentials=true"
        - "traefik.http.middlewares.api-speedfunnels-cors.headers.accesscontrolexposeheaders=Content-Length,Content-Type"
        - "traefik.http.middlewares.api-speedfunnels-sec-headers.headers.customresponseheaders.Cross-Origin-Resource-Policy=cross-origin"
        - "traefik.http.middlewares.api-speedfunnels-sec-headers.headers.customresponseheaders.Cross-Origin-Embedder-Policy=require-corp"
        - "traefik.http.middlewares.api-speedfunnels-sec-headers.headers.customresponseheaders.Cross-Origin-Opener-Policy=same-origin-allow-popups"
        - "traefik.http.routers.api-speedfunnels.middlewares=api-speedfunnels-cors,api-speedfunnels-sec-headers"

  # Frontend
  frontend:
    image: marcussviniciusa/meta-ads-frontend:latest
    restart: always
    environment:
      - REACT_APP_API_URL=https://${API_DOMAIN}/api
    networks:
      - SpeedFunnelsNet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=SpeedFunnelsNet"
        - "traefik.http.routers.frontend-speedfunnels.rule=Host(`${FRONTEND_DOMAIN}`)"
        - "traefik.http.routers.frontend-speedfunnels.entrypoints=websecure"
        - "traefik.http.routers.frontend-speedfunnels.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.frontend-speedfunnels.loadbalancer.server.port=80"
        - "traefik.http.middlewares.security-headers-speedfunnels.headers.forcestsheader=true"
        - "traefik.http.middlewares.security-headers-speedfunnels.headers.stsincludesubdomains=true"
        - "traefik.http.middlewares.security-headers-speedfunnels.headers.stsseconds=31536000"
        - "traefik.http.routers.frontend-speedfunnels.middlewares=security-headers-speedfunnels"
